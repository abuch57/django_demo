version: 2.1

orbs:
  python: circleci/python@1.5.0

jobs:
  build:
    executor: python/default
#    parallelism: 2
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip
#      - python/install-packages:
#          pip-dependency-file: requirements.txt
#          pkg-manager: pip
#      - python/install-packages:
#          args: pytest
#          pkg-manager: pip
#          pypi-cache: false
      - run:
          command: |
            pytest --junit-xml=test-report/report.xml
          name: Test
      - store_test_results:
          path: test-report
      # Save workspace for subsequent jobs (i.e. test)
#      - persist_to_workspace:
#          root: .
#          paths:
#            - .

  lint:
    executor: python/default
    parameters:
      include-branch-in-cache-key:
        default: true
        description: |
          If true, this cache bucket will only apply to jobs within the same branch.
        type: boolean
      pip-dependency-file:
        default: requirements.txt
        description: Name of the requirements file that needs to be installed with pip. Prepended with `app-dir`. If using pipenv or poetry, this is ignored.
        type: string
      cache-version:
        default: v1
        description: Change the default cache version if you need to clear the cache for any reason.
        type: string
      app-dir:
        default: ~/project
        description: Path to the directory containing your python project. Not needed if dependency file lives in the root.
        type: string
      include-python-in-cache-key:
        default: true
        description: |
          If true, this cache bucket will checksum the pyenv python version with the cache-key
        type: boolean
    steps:
      # Reuse the workspace from the build job
#      - attach_workspace:
#          at: .
#      - python/install-packages:
#          args: pylint
#          pkg-manager: pip
#          pypi-cache: false
      - checkout
      - restore_cache:
          key: -pypi-<<parameters.cache-version>>-<<#parameters.include-branch-in-cache-key>>{{ .Branch }}-<</parameters.include-branch-in-cache-key>>{{ checksum "<< parameters.app-dir >>/<<parameters.pip-dependency-file>>" }}-<<#parameters.include-python-in-cache-key>>{{ checksum "/home/circleci/.pyenv/version" }}-<</parameters.include-python-in-cache-key>>
      - run:
          command: |
            pylint polls --exit-zero
          name: linting

workflows:
   main:
    jobs:
      - build
      - lint:
          requires:
            - build