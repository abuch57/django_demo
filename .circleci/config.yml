version: 2.1

orbs:
  python: circleci/python@1.5.0

#jobs:
#  build:
#    docker:
#      - image: cimg/python:3.9.9
#    resource_class: medium
#    parallelism: 2
#    steps:
#      - checkout
#      - restore_cache:
#          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
#      - run:
#          command: |
#            python3 -m venv venv
#            . venv/bin/activate
#            pip install -r requirements.txt
#      - save_cache:
#          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
#          paths:
#            - "venv"
#      - run:
#          name: Running tests
#          command: |
#            . venv/bin/activate
#            pytest

workflows:
   main:
    jobs:
      - python/test:
          pkg-manager: pipenv
          test-tool: pytest

#version: 2.1
#
#orbs:
#  python: circleci/python@1.5.0
#
#jobs:
#  build:
#    docker:
#      - image: cimg/python:3.9.9
#    resource_class: medium
#    parallelism: 2
#    steps:
#      - checkout
#      - restore_cache:
#          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
#      - run:
#          command: |
#            python3 -m venv venv
#            . venv/bin/activate
#            pip install -r requirements.txt
#      - save_cache:
#          key: deps1-{{ .Branch }}-{{ checksum "requirements.txt" }}
#          paths:
#            - "venv"
#      - run:
#          name: Running tests
#          command: |
#            . venv/bin/activate
#            python3 manage.py test
##      - run:
##          name: Creating Test Results Directory
##          command: |
##            mkdir -p /test_results
#      - store_test_results:
#          path: test_results
##          destination: python_app
#workflows:
#  version: 2
#  build_and_test:
#    jobs:
#      - build
#      - hold:
#          type: approval
#          requires:
#            - build