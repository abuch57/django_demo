version: 2.1

orbs:
  python: circleci/python@1.5.0
  gcp-gcr: circleci/gcp-gcr@0.13.0
  gcp-gke: circleci/gcp-gke@1.4.0

jobs:
  build:
    executor: python/default
#    parallelism: 2
    steps:
      - checkout
      - python/install-packages:
          pkg-manager: pip


  lint:
    executor: python/default
    parameters:
      include-branch-in-cache-key:
        default: true
        description: |
          If true, this cache bucket will only apply to jobs within the same branch.
        type: boolean
      pip-dependency-file:
        default: requirements.txt
        description: Name of the requirements file that needs to be installed with pip. Prepended with `app-dir`. If using pipenv or poetry, this is ignored.
        type: string
      cache-version:
        default: v1
        description: Change the default cache version if you need to clear the cache for any reason.
        type: string
      app-dir:
        default: ~/project
        description: Path to the directory containing your python project. Not needed if dependency file lives in the root.
        type: string
      include-python-in-cache-key:
        default: true
        description: |
          If true, this cache bucket will checksum the pyenv python version with the cache-key
        type: boolean
    steps:
      # Reuse the workspace from the build job
#      - attach_workspace:
#          at: .
      - checkout
      - restore_cache:
          key: -pypi-<<parameters.cache-version>>-<<#parameters.include-branch-in-cache-key>>{{ .Branch }}-<</parameters.include-branch-in-cache-key>>{{ checksum "<< parameters.app-dir >>/<<parameters.pip-dependency-file>>" }}-<<#parameters.include-python-in-cache-key>>{{ checksum "/home/circleci/.pyenv/version" }}-<</parameters.include-python-in-cache-key>>
      - python/install-packages:
          args: pylint
          pkg-manager: pip
          pypi-cache: false
      - run:
          command: |
            pylint polls --exit-zero
          name: linting



  build-push-image-docker:
    description: Build and push image to Google Container Registry
    machine: true
    steps:
      - checkout
      - gcr/gcr-auth
      - gcr/build-image:
          image: circle-gke
          tag: "v10" #change when updating
      - gcr/push-image:
          image: circle-gke
          tag: "v10" #change when updating

  deploy:
    description: Deploy application to Google Kubernetes Engine
    machine: true
    steps:
      # Install `gcloud` and `kubectl` if not already installed.
      - gcp-gke/install
      # Initialize the `gcloud` CLI.
      - gcp-gke/init
      # Update a deployment Docker image.
      - gcp-gke/rollout-image:
          deployment: circle-ci-cluster
          container: alec-backend
          image: gcr.io/circle-ci-demo/circle-gke:v10 # change version when updating

workflows:
   main:
    jobs:
      - build
      - lint:
          requires:
            - build
      - python/test:
          requires:
            - build
          test-tool: pytest
      - manual-approval:
          type: approval
          requires:
            - lint
            - python/test
      - build-push-image-docker:
          requires:
            - manual-approval
      - deploy:
          requires:
            - build-push-image-docker